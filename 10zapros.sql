USE univers;
CHECKPOINT;
DBCC DROPCLEANBUFFERS;

-- 1
-- 1.1
SELECT i.name AS [Индексы_UNIVER] FROM sys.indexes i JOIN sys.tables t ON t.object_id = i.object_id 
	WHERE t.name = 'AUDITORIUM' OR 
		  t.name = 'AUDITORIUM_TYPE' OR
		  t.name = 'FACULTY' OR
		  t.name = 'GROUPS' OR
		  t.name = 'PROFESSION' OR
		  t.name = 'PROGRESS' OR
		  t.name = 'PULPIT' OR
		  t.name = 'STUDENT' OR
		  t.name = 'SUBJECT' OR
		  t.name = 'TEACHER';

-- 1.2

USE tempdb

CREATE TABLE #TEMPTABLE (
	ID INT,
	NUMBER INT
);

DECLARE @i INT = 1;
WHILE @i <= 1000
BEGIN 
	INSERT INTO #TEMPTABLE VALUES (@i, FLOOR(RAND() * 1000))
	SET @i = @i + 1;
END;

SELECT * FROM #TEMPTABLE;

-- 1.3

SET SHOWPLAN_XML ON; 
GO
SELECT * FROM #TEMPTABLE; 
GO
SET SHOWPLAN_XML OFF;

-- 1.4

CREATE CLUSTERED INDEX #TEMPTABLE_INDEX ON #TEMPTABLE(ID)
DROP INDEX #TEMPTABLE_INDEX ON #TEMPTABLE

-- 2

CREATE TABLE #TASK2 (NUM INT, COL INT)

DECLARE @i INT = 0;
WHILE @i < 100000
	BEGIN
	INSERT INTO #TASK2(NUM, COL) VALUES (@i, FLOOR(RAND() * 10000))
	SET @i = @i + 1
END
SELECT * FROM #TASK2; 

SET SHOWPLAN_XML ON; 
GO
SELECT * FROM #TASK2; 
GO
SET SHOWPLAN_XML OFF;

CREATE NONCLUSTERED INDEX #TASK2_IND ON #TASK2(NUM, COL)
DROP INDEX #TASK2_IND ON #TASK2

SELECT * FROM #TASK2

SELECT * FROM #TASK2 WHERE NUM < 10 AND COL > 5000

-- 3 


CREATE TABLE #TASK3 (NUM INT, COL INT)

DECLARE @i INT = 0;
WHILE @i < 100000
BEGIN
	INSERT INTO #TASK3(NUM, COL) VALUES (@i, FLOOR(RAND() * 10000))
	SET @i = @i + 1
END

SET SHOWPLAN_XML ON; 
GO
SELECT * FROM #TASK3; 
GO
SET SHOWPLAN_XML OFF;

SELECT NUM, COL FROM #TASK3 WHERE COL > 5000

CREATE INDEX #TASK3_IND ON #TASK3(COL) INCLUDE (NUM)
DROP INDEX #TASK3_IND ON #TASK3

-- 4

CREATE TABLE #TASK4 (NUM INT, COL INT)

DECLARE @k INT = 0;
WHILE @k < 100000
BEGIN
	INSERT INTO #TASK4(NUM, COL) VALUES (@k, FLOOR(RAND() * 10000))
	SET @k = @k + 1
END

SET SHOWPLAN_XML ON; 
GO
SELECT * FROM #TASK4; 
GO
SET SHOWPLAN_XML OFF;

SELECT COL FROM #TASK4 WHERE COL >= 5000 AND COL < 10000
CREATE INDEX #TASK4_IND ON #TASK4(COL) WHERE (COL >= 5000 AND COL < 10000)


DROP INDEX #TASK4_IND ON #TASK4

-- 5
CREATE TABLE #TASK5 (ID INT, COL INT);

DECLARE @I INT = 0;
WHILE @I < 1000
BEGIN
	INSERT INTO #TASK5 VALUES (@I, FLOOR(RAND() * 1000));
	SET @I = @I + 1;
END;

CREATE NONCLUSTERED INDEX #TASK5_INDEX ON #TASK5(COL);

SELECT name [Индекс], avg_fragmentation_in_percent [Фрагментация (%)]
FROM sys.dm_db_index_physical_stats(DB_ID(N'TEMPDB'),    
    OBJECT_ID(N'#TASK5'), NULL, NULL, NULL) ss
JOIN sys.indexes ii 
    ON ss.object_id = ii.object_id 
    AND ss.index_id = ii.index_id  
WHERE name IS NOT NULL;

DROP INDEX #TASK5_INDEX ON #TASK5;

SELECT * FROM #TASK5;

INSERT top(10000) #TASK5(ID, COL) select ID, COL from #TASK5;

ALTER INDEX #TASK5_INDEX ON #TASK5 REORGANIZE;

ALTER INDEX #TASK5_INDEX ON #TASK5 REBUILD WITH (ONLINE = OFF);

-- 6

CREATE TABLE #TASK6 (ID INT, COL INT)

DECLARE @c INT = 0
WHILE @c < 1000
BEGIN 
	INSERT INTO #TASK6 VALUES (@c, FLOOR(RAND() * 1000))
	SET @c = @c + 1
END 

SELECT * FROM #TASK6

INSERT top(10000) #TASK6(ID, COL) select ID, COL from #TASK6;


CREATE NONCLUSTERED INDEX #TASK6_INDEX ON #TASK6(COL) WITH (FILLFACTOR = 80)
DROP INDEX #TASK6_INDEX ON #TASK6;

SELECT name [Индекс], avg_fragmentation_in_percent [Фрагментация (%)]
FROM sys.dm_db_index_physical_stats(DB_ID(N'TEMPDB'),    
    OBJECT_ID(N'#TASK6'), NULL, NULL, NULL) ss
JOIN sys.indexes ii 
    ON ss.object_id = ii.object_id 
    AND ss.index_id = ii.index_id  
WHERE name IS NOT NULL;
